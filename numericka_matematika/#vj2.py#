import math

#taylorov razvoj
def razvoj_ln_1_plus_x(x):
    suma = 0
    for i in range(1, 1001):





# razvoj = razvoj_ln_1_plus_x(1)
# print(razvoj)

def razvoj_2(x):
    #ima greska negdje?
    suma = 0
    for i in range(1, 21, 2):
        print(i)
        suma = suma + 2*((x**i)/i)
    return suma
# razvoj2 = razvoj_2(1)
# print(razvoj2)

# def factorial(x):
#     if x == 1:
#         return 1
#     else:
#         return x * factorial(x-1)
# # print('factorial', factorial(6))

def factorial(n):
    if n < 0:
        return None  # Factorial is undefined for negative numbers
    result = 1
    for i in range(1, n + 1):
        result *= i
    return result

def fja(n):
    suma = 0
    for i in range(0, n):
        # print(f"factorial {factorial(i)}, {i}")
        # print(f"{(-1)**(i+1)}, {i}")
        suma += ((-1)**(i+2))*(1/factorial(i+1))
    return suma
# print(fja(10000))

def korijen(s):
    x_n = 1
    for i in range(0, 10):
        x_n = (1/2)*(x_n + s/x_n)
        print(f"i={i}, x={x_n}")
    return x_n

print(korijen(20))
print(math.sqrt(20))

# podrazumijevamo da idemo od najveceg koeficijenta
def rac_polinoma(p, x):
    s = p[0]
    # for k in range(1, len(p)):
        #uraditi svojevoljno
